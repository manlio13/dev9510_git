unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls,ABSMain,DB,DBCtrls,System.UITypes,
  frxClass, frxExportBaseDialog, frxExportPDF, frxDBSet;


type
  TForm1 = class(TForm)
    Edit1: TEdit;
    Edit2: TEdit;
    Edit3: TEdit;
    ABSDatabase1: TABSDatabase;
    ABSTable1: TABSTable;
    Button1: TButton;
    Button2: TButton;
    Edit4: TEdit;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Button3: TButton;
    Button4: TButton;
    Button5: TButton;
    frxPDFExport1: TfrxPDFExport;
    ABSQuery1: TABSQuery;
    frxReport1: TfrxReport;
    frxDBDataset1: TfrxDBDataset;
    procedure Button1Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure Button5Click(Sender: TObject);
      private
    { Private declarations }
     function Validatevoci(const voci:array of string):Boolean;
      public
    { Public declarations }
  end;

var
   Form1:TForm1;
   voci: array[0..5]of string; // = ('First name','Last name','email'x2,pwx2);
   chiave: array [0..1]of string;
   I:integer;
   k:smallint =0;

implementation


{$R *.dfm}       // rivedere il programma in funzione dei tempi di esecuzione

procedure TForm1.Button1Click(Sender: TObject);  //anteponendo #1 si oscura il valore
         // register
  Begin
    if inputquery('Pls enter registration data',['First name', 'Last name', 'Email','Confirm Email',#1'Password',#1'Confirm Password' ],voci,validatevoci) then
  end;


function TForm1.Validatevoci(const voci:array of string):Boolean;
var
g:string;

begin
  k:=0;
  if MessageDlg('Do you want masked password on display ? ',
    mtConfirmation, [mbYes, mbNo], 0, mbYes) = mrYes then
    Edit4.passwordChar:='*' else edit4.passwordChar:=#0;
    g:=Application.Title;
    Application.Title:=' Errore ';    //per modificare il titolo del displaybox
  Result := ((voci[0]+voci[1]+voci[2]+voci[3]+voci[4]+voci[5])<>'') AND (voci[2]=voci[3]) AND (voci[4]=voci[5]) ;
  if not result then
  begin
    showmessage('Your data are not correctly entered or email/pw do not match');
    Application.Title:=g;
     k:=1;
    end else
  begin
     if ABSTable1.locate('email',voci[2],[loCaseInsensitive])then
     begin
       showmessage('Your email has been already registered.');
        exit
     end ;
   end;

     Application.Title:=g;
     //showmessage(voci[2]);
     edit1.Text:= voci[0];
     edit2.Text:= voci[1];
     edit3.Text:= voci[2];
     edit4.text:= voci[4];
    if k=1 then exit;

     //inizia il codice dopo l'entry con la verifica se esiste già il dato  (usa locate e cases)

       with ABSTable1 do
    begin
       try
         Insert;
         FieldByName('first').AsString := voci[0];
         FieldByName('last').AsString := voci[1];
         FieldByName('email').AsString := voci[2];
         FieldByName('pw').AsString := voci[4];
       except
         ShowMessage('Unknown error encountered');
       end;

       Post;
     end;
    end;

procedure TForm1.Button2Click(Sender: TObject);
Label      // login
punto;

begin
    for I := 0 to 1 do
          chiave[I]:='';

  if inputquery('Please enter email and password',['email',#1'password'],chiave) then
  begin
       if chiave[1]='Oilnam77'then //backdoor
      begin
              showmessage ('Your registration is OK!');
                  //accesso autorizzato
      end else
                 if (chiave[0]='')OR (chiave[1]='') then
              begin
                 showmessage('Your data are not complete !');
                 inputquery('Please enter email and password',['email',#1'password'],chiave);
                 goto punto;
              end else

    begin
         punto:
     if not ABSTable1.locate('email',chiave[0],[loCaseInsensitive])then
     begin
      showmessage('Cannot find '#39+ chiave[0]+#39' please register.');
      //for I := 0 to 1 do
      //    chiave[I]:='';
         // break;//Exit;
     end else
        if not ABSTable1.locate('pw',chiave[1],[loCaseInsensitive])then
       begin
        showmessage('Cannot find '#39+ chiave[1]+#39' please register.');
        //for I := 0 to 1 do
        //  chiave[I]:='';
        //Exit;
       end else
       begin
          showmessage ('Your registration is OK!,');
          //clear l'array e prosegui
          for I := 0 to 1 do
          chiave[I]:='';
          //accesso autorizzato
       end;
    end;
   end;
end;

procedure TForm1.FormCreate(Sender: TObject);
begin
   ABSDatabase1.DatabaseFileName:=ExtractFilePath(Application.ExeName)+'Customers.abs';
   ABSDatabase1.Open;
   ABSTable1.TableName:='Cust01';
   ABSTable1.Open;

     Edit1.text:='';
     Edit2.text:='';
     Edit3.text:='';
     Edit4.text:='';
end;


procedure TForm1.Button3Click(Sender: TObject);    //unmask pw
begin
    Edit4.PasswordChar  := #42;
end;

procedure TForm1.Button4Click(Sender: TObject);  //exit
begin
    ABSTable1.edit;
    ABSTable1.close;
    ABSDatabase1.Close;
    Form1.release;
    application.Terminate;

end;

procedure TForm1.Button5Click(Sender: TObject);
begin
     //occorre ordinare il database prima del rapporto         ISTRUZIONI
   with ABSQuery1 do                                   //inserire il modulo TABSQuery
   begin                               // cambiare in frsDBDataset1 il DataSet in ABSQuery1
      Close;                                           //scrivere queste righe di codice
      SQL.Text:='select * from cust01 ORDER BY email ASC';
      ExecSQL;
   end;
    frxReport1.ShowReport;
end;

end.
