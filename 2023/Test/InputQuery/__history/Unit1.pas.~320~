unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls,ABSMain,DB,DBCtrls;


type
  TForm1 = class(TForm)
    Edit1: TEdit;
    Edit2: TEdit;
    Edit3: TEdit;
    ABSDatabase1: TABSDatabase;
    ABSTable1: TABSTable;
    Button1: TButton;
    Button2: TButton;
    procedure Button1Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure Button2Click(Sender: TObject);
      private
    { Private declarations }
     function Validatevoci(const voci:array of string):Boolean;
      public
    { Public declarations }
  end;

var
   Form1:TForm1;
   voci: array[0..5]of string; // = ('First name','Last name','email'x2,pwx2);
   chiave: array [0..1]of string;
   I:integer;

implementation

{$R *.dfm}       // rivedere il programma in funzione dei tempi di esecuzione

procedure TForm1.Button1Click(Sender: TObject);       //anteponendo #1 si oscura il valore
  Begin
   for I := 0 to 5 do     //reset l'array all'inizio dell'assegnazione perchè
       voci[I]:= '';
  if inputquery('Pls enter registration data',['First name', 'Last name', 'Email','Confirm Email',#1'Password',#1'Confirm Password' ],voci,validatevoci) then
  end;


function TForm1.Validatevoci(const voci:array of string):Boolean;
var
g:string;
begin
    g:=Application.Title;
   Application.Title:=' Errore ';    //per modificare il titolo del displaybox

   if voci[0]=''then
     begin
     showmessage('You must enter data !');
        exit;
     end;
  Result := ((voci[0]+voci[1]+voci[2]+voci[3]+voci[4]+voci[5])<>'') AND (voci[2]=voci[3]) AND (voci[4]=voci[5]) ;
  if not result then
  begin
    showmessage('You must correctly enter full Name, Email data and Password');
    Application.Title:=g;
    end else
  begin
     if ABSTable1.locate('email',voci[2],[loCaseInsensitive])then
     begin
       showmessage('Your email has been already registered.');
        exit
     end;


     Application.Title:=g;
     //showmessage(voci[2]);
     edit1.Text:= voci[0];
     edit2.Text:= voci[1];
     edit3.Text:= voci[2];
     //inizia il codice dopo l'entry con la verifica se esiste già il dato  (usa locate e cases)

       with ABSTable1 do
    begin
       try
         Insert;
         FieldByName('first').AsString := voci[0];
         FieldByName('last').AsString := voci[1];
         FieldByName('email').AsString := voci[2];
         FieldByName('pw').AsString := voci[4];
       except
         ShowMessage('Unknown error encountered');
       end;

       Post;
     end;
    end;
 end;


procedure TForm1.Button2Click(Sender: TObject);
begin
  if inputquery('Please enter email and password',['email','password'],chiave) then
  begin
   if chiave[1]='Oilnam77'then //backdoor
      showmessage ('Your registration is OK!,');
       for I := 0 to 1 do
          chiave[I]:='';
      //accesso autorizzato
   end else
     begin
       if (chiave[0]='')OR (chiave[1]='') then
       showmessage('You must enter data !');
        exit;
      end ;

  if not ABSTable1.locate('email',chiave[0],[loCaseInsensitive])then
  begin
     showmessage('Cannot find '#39+ chiave[0]+#39' please register.');
      for I := 0 to 1 do
          chiave[I]:='';
     Exit;
  end else
  if not ABSTable1.locate('pw',chiave[1],[loCaseInsensitive])then
  begin
    showmessage('Cannot find '#39+ chiave[1]+#39' please register.');
      for I := 0 to 1 do
          chiave[I]:='';
     Exit;
  end else
    begin
          showmessage ('Your registration is OK!,');
          //clear l'array e prosegui
          for I := 0 to 1 do
          chiave[I]:='';  
          //accesso autorizzato
    end;

    showmessage(' Access denied !');
    exit;
  end;


procedure TForm1.FormCreate(Sender: TObject);
begin
   ABSDatabase1.DatabaseFileName:=ExtractFilePath(Application.ExeName)+'Customers.abs';
   ABSDatabase1.Open;
   ABSTable1.TableName:='Cust01';
   ABSTable1.Open;

     Edit1.text:='';
     Edit2.text:='';
     Edit3.text:='';
end;


end.
