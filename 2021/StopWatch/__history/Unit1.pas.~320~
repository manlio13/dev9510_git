unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs,System.Diagnostics,Vcl.StdCtrls,
  Vcl.ExtCtrls;

type
  TForm1 = class(TForm)
    Button1: TButton;
    Button2: TButton;
    Button3: TButton;
    Edit1: TEdit;
    Panel1: TPanel;
    Shape1: TShape;
    Timer1: TTimer;
    Edit2: TEdit;
    procedure FormCreate(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);

  private

   //procedure Timer1Timer(Sender: TObject);
    { Private declarations }
  public


  end;

var
  Form1: TForm1;
   ms:double;
   sw:Tstopwatch;
   key:Char;
   park:Boolean;
    i:Integer;
  // ElapsedMillisecond:Int64;
implementation

{$R *.dfm}


procedure TForm1.FormCreate(Sender: TObject);
 begin
 //ElapsedMillisecond:=0;
  // RegisterHotKey(Handle,1,MOD_CONTROL, VK_SPACE);  //0 nessun tasto doppio
   sw:=TStopwatch.Create;
   Shape1.visible:=False;
   Park:=False;
 end;

   procedure TForm1.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
      //Beep;

         if (key=(VK_space))and (park=False) then
         begin
          //ShowMessage('tasto spazio');
          park:=True;
          sw.stop;
          ms:=sw.ElapsedMilliseconds;
          Edit1.text:=FloatToStr(ms);
          Shape1.visible :=False;
         end;
end;

procedure TForm1.Timer1Timer(Sender: TObject); //NB aggiungere TForm1 per unsatisfied forward
begin
 Form1.Shape1.Visible:=True;
 sw.start;   //parte il tempo
end;


procedure TForm1.Button1Click(Sender: TObject);       //start
var
  I,n: Integer;
  begin
    i:=0;
   Edit2.text:='';
   sw.reset;
    if I <= 10 then
     begin
          park:=True;
           n:=1000 +random (10000);
           Timer1.interval:=n;
           Timer1.enabled:=True;
           i:=i+1;
           while park do
          begin
             park:=False;
            Edit2.Text:= IntToStr(i) ;
             Application.ProcessMessages;

           end;
      end else
    Exit;
  end;


 end.


